pipeline {
    agent any
    tools {
        jdk 'jdk17'
    }
    stages {
        stage('Clone') {
            steps {
                git branch: 'release/1.0', credentialsId: 'edututorc', url: 'https://github.com/TLS-The-Last-Stop/edututor'
            }
            post {
                failure {
                    echo 'Repository clone failure!'
                }
                success {
                    echo 'Repository clone success!'
                }
            }
        }
        stage('Build') {
            steps {
                dir('Backend/edututor') {
                    sh 'chmod +x gradlew'
                    withCredentials([string(credentialsId: 'JASYPT_KEY', variable: 'JASYPT_ENCRYPTOR_PASSWORD')]) {
                        sh './gradlew clean build -PJASYPT_ENCRYPTOR_PASSWORD=$JASYPT_ENCRYPTOR_PASSWORD'
                    }
                }
            }
        }

        stage('Docker Hub Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh 'echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin'
                }
            }
        }
				stage('Docker Build and Push') {
        			steps {
        				withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', passwordVariable: 'DOCKER_PROJECT', usernameVariable: 'DOCKER_REPO')]) {
                            sh 'cd ./Backend/edututor && docker build -f Dockerfile -t $DOCKER_REPO/$DOCKER_PROJECT .'
        				    sh 'cd ./Backend/edututor && docker push $DOCKER_REPO/$DOCKER_PROJECT'
        				    echo 'docker push Success!!'
                        }
        				echo 'docker push Success!!'
        			}
        		}

        stage('Deploy') {
            steps {
                sshagent(credentials: ['my-ssh-credentials']) {
                    withCredentials([string(credentialsId: 'EC2_SERVER_IP', variable: 'IP')]) {
                        sh 'ssh -o StrictHostKeyChecking=no ubuntu@$IP "sudo sh deploy.sh"'
                    }
                }
            }
        }
    }
}